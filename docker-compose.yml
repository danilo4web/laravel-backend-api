version: '3'

networks:
  laravel:

services:
  redis:
    image: redis:alpine

  mysql:
    image: mysql:8
    command: --init-file /var/www/html/database/init.sql
    volumes:
      - ./database/init.sql:/var/www/html/database/init.sql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_ROOT}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  nginx:
    image: nginx:stable-alpine
    ports:
      - "8080:80"
      - "9001:9001"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  composer:
    image: composer:1.10.16
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - .:/var/www/html
      - ./docker/php/docker-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    ports:
      - "9000:9000"
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel



volumes:
  db_data: {}
